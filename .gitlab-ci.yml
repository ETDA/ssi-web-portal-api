stages:
  - test
  - build
  - delivery
  - deploy

variables:
  TAG_LATEST: $CI_REGISTRY_IMAGE/$CI_COMMIT_BRANCH:latest
  TAG_COMMIT: $CI_REGISTRY_IMAGE/$CI_COMMIT_BRANCH:$CI_COMMIT_SHORT_SHA
  SEED_LATEST: $CI_REGISTRY_IMAGE/$CI_COMMIT_BRANCH-seed:latest
  SEED_COMMIT: $CI_REGISTRY_IMAGE/$CI_COMMIT_BRANCH-seed:$CI_COMMIT_SHORT_SHA
  MIGRATE_LATEST: $CI_REGISTRY_IMAGE/$CI_COMMIT_BRANCH-migrate:latest
  MIGRATE_COMMIT: $CI_REGISTRY_IMAGE/$CI_COMMIT_BRANCH-migrate:$CI_COMMIT_SHORT_SHA

unit-test:
  stage: test
  image: ssi-registry.teda.th/ssi/ssi-core-api/core:1.0.0
  script:
    - make download-modules
    - make test
  environment:
    name: staging
  only:
    - merge_requests
  tags:
    - k8s-stg-runner

build-delivery-staging:
  stage: build
  image: docker/compose:latest
  services:
    - name: docker:18.09.7-dind
  variables:
    DOCKER_HOST: tcp://docker:2375
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker-compose build
    - docker-compose push
    - docker tag $TAG_LATEST $TAG_COMMIT
    - docker tag $SEED_LATEST $SEED_COMMIT
    - docker tag $MIGRATE_LATEST $MIGRATE_COMMIT
    - docker push $TAG_COMMIT
    - docker push $MIGRATE_COMMIT
    - docker push $SEED_COMMIT
  retry:
    max: 2
    when:
      - runner_system_failure
      - stuck_or_timeout_failure
  environment:
    name: staging
  only:
    - staging
  tags:
    - k8s-stg-runner

deploy-staging:
  stage: deploy
  image:
    name: bitnami/kubectl:latest
    entrypoint: [""]
  script:
    - kubectl --kubeconfig="$KUBE_CONFIG" set image --record deployment/web-portal-api web-portal-api=$TAG_COMMIT web-portal-api-migrate=$MIGRATE_COMMIT web-portal-api-seed=$SEED_COMMIT -n integration
  environment:
    name: staging
  only:
    - staging
  tags:
    - k8s-stg-runner

delivery-production:
  stage: delivery
  image: docker:19.03.15
  services:
    - name: docker:18.09.7-dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    STG_LATEST_IMAGE: $CI_REGISTRY_IMAGE/staging:$CI_COMMIT_SHORT_SHA
    STG_SEED_IMAGE: $CI_REGISTRY_IMAGE/staging-seed:$CI_COMMIT_SHORT_SHA
    STG_MIGRATE_IMAGE: $CI_REGISTRY_IMAGE/staging-migrate:$CI_COMMIT_SHORT_SHA
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $STG_LATEST_IMAGE
    - docker pull $STG_SEED_IMAGE
    - docker pull $STG_MIGRATE_IMAGE
    - docker tag $STG_LATEST_IMAGE $TAG_LATEST
    - docker tag $STG_LATEST_IMAGE $TAG_COMMIT
    - docker tag $STG_SEED_IMAGE $SEED_LATEST
    - docker tag $STG_SEED_IMAGE $SEED_COMMIT
    - docker tag $STG_MIGRATE_IMAGE $MIGRATE_LATEST
    - docker tag $STG_MIGRATE_IMAGE $MIGRATE_COMMIT
    - docker push $TAG_LATEST
    - docker push $TAG_COMMIT
    - docker push $SEED_COMMIT
    - docker push $SEED_COMMIT
    - docker push $MIGRATE_LATEST
    - docker push $MIGRATE_COMMIT
  environment:
    name: production
  only:
    - production
  tags:
    - k8s-prd-runner

deploy-production:
  stage: deploy
  image:
    name: bitnami/kubectl:latest
    entrypoint: [""]
  script:
    - kubectl --kubeconfig="$KUBE_CONFIG" set image --record deployment/web-portal-api web-portal-api=$TAG_COMMIT web-portal-api-migrate=$MIGRATE_COMMIT web-portal-api-seed=$SEED_COMMIT -n integration
  environment:
    name: production
  only:
    - production
  tags:
    - k8s-prd-runner
  when: manual
